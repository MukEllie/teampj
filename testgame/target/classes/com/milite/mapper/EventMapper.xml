<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.milite.mapper.EventMapper">

  <!-- ======= Normal ======= -->
  <select id="pickOneUnusedNormal" resultType="com.milite.dto.NormalEventDto">
    SELECT
      ne_id, ne_name, ne_session, ne_dice, ne_php, ne_mhp, ne_patk, ne_matk, ne_gold, ne_luck
    FROM normalevent
    WHERE (LOWER(ne_session)='none' OR LOWER(ne_session)=LOWER(#{session}))
      AND ne_id NOT IN (
        SELECT event_id FROM used_events
        WHERE player_id = #{playerId}
          AND layer = #{layer}
          AND event_type = 'normal'
      )
    ORDER BY RAND() LIMIT 1
  </select>

  <select id="getNormalById" parameterType="int" resultType="com.milite.dto.NormalEventDto">
    SELECT ne_id, ne_name, ne_session, ne_dice, ne_php, ne_mhp, ne_patk, ne_matk, ne_gold, ne_luck
    FROM normalevent
    WHERE ne_id = #{ne_id}
    LIMIT 1
  </select>

  <!-- ======= Roll ======= -->
  <select id="pickOneUnusedRoll" resultType="com.milite.dto.RollEventDto">
    SELECT
      re_id, re_name, re_session, re_dice, re_dicelimit,
      re_php, re_pmaxhp, re_mhp, re_mmaxhp, re_patk, re_matk, re_gold, re_luck
    FROM rollevent
    WHERE (LOWER(re_session)='none' OR LOWER(re_session)=LOWER(#{session}))
      AND re_id NOT IN (
        SELECT event_id FROM used_events
        WHERE player_id = #{playerId}
          AND layer = #{layer}
          AND event_type = 'roll'
      )
    ORDER BY RAND() LIMIT 1
  </select>

  <select id="getRollById" parameterType="int" resultType="com.milite.dto.RollEventDto">
    SELECT
      re_id, re_name, re_session, re_dice, re_dicelimit,
      re_php, re_pmaxhp, re_mhp, re_mmaxhp, re_patk, re_matk, re_gold, re_luck
    FROM rollevent
    WHERE re_id = #{re_id}
    LIMIT 1
  </select>

  <!-- ======= Trap ======= -->
  <select id="pickOneUnusedTrap" resultType="com.milite.dto.TrapEventDto">
    SELECT te_id, te_name, te_session, te_dice, te_dicelimit, te_php, te_maxhp, te_patk, te_luck
    FROM trapevent
    WHERE (LOWER(te_session)='none' OR LOWER(te_session)=LOWER(#{session}))
      AND te_id NOT IN (
        SELECT event_id FROM used_events
        WHERE player_id = #{playerId}
          AND layer = #{layer}
          AND event_type = 'trap'
      )
    ORDER BY RAND() LIMIT 1
  </select>

  <select id="getTrapById" parameterType="int" resultType="com.milite.dto.TrapEventDto">
    SELECT te_id, te_name, te_session, te_dice, te_dicelimit, te_php, te_maxhp, te_patk, te_luck
    FROM trapevent
    WHERE te_id = #{te_id}
    LIMIT 1
  </select>

  <!-- ======= Select (부모) ======= -->
  <select id="pickOneUnusedSelect" resultType="com.milite.dto.SelectEventDto">
    SELECT se_id, se_name, se_session
    FROM selectevent
    WHERE (LOWER(se_session)='none' OR LOWER(se_session)=LOWER(#{session}))
      AND se_id NOT IN (
        SELECT event_id FROM used_events
        WHERE player_id = #{playerId}
          AND layer = #{layer}
          AND event_type = 'select'
      )
    ORDER BY RAND() LIMIT 1
  </select>

  <select id="getSelectChoices" parameterType="int" resultType="com.milite.dto.SelectChoiceDto">
    SELECT
      sec_id, se_id, sec_opt,
      sec_php, sec_pmaxhp, sec_mhp, sec_mmaxhp, sec_patk, sec_matk, sec_gold, sec_luck,sec_text
    FROM selectevent_choice
    WHERE se_id = #{se_id}
    ORDER BY sec_id
  </select>

  <select id="getSelectChoiceById" parameterType="int" resultType="com.milite.dto.SelectChoiceDto">
    SELECT
      sec_id, se_id, sec_opt,
      sec_php, sec_pmaxhp, sec_mhp, sec_mmaxhp, sec_patk, sec_matk, sec_gold, sec_luck,sec_text
    FROM selectevent_choice
    WHERE sec_id = #{sec_id}
    LIMIT 1
  </select>

  <!-- ======= Card ======= -->
  <select id="pickOneUnusedCard" resultType="com.milite.dto.CardEventDto">
    SELECT ce_id, ce_name, ce_session, ce_dmg
    FROM cardevent
    WHERE (LOWER(ce_session)='none' OR LOWER(ce_session)=LOWER(#{session}))
      AND ce_id NOT IN (
        SELECT event_id FROM used_events
        WHERE player_id = #{playerId}
          AND layer = #{layer}
          AND event_type = 'card'
      )
    ORDER BY RAND() LIMIT 1
  </select>

  <!-- SkillDB에서 skill_type='event' 카드 3장 -->
  <select id="getEventSkillsFromDB" resultType="com.milite.dto.SkillDto">
	  SELECT
	    s.skill_id    AS skill_ID,
	    s.skill_job   AS skill_Job,     -- Warrior/Thief/Mage/Common
	    s.skill_type  AS skill_Type,    -- Event
	    s.rarity      AS rarity,        -- N/R/SR
	    s.element     AS element,       -- Water/Fire/Grass/None
	    s.skill_name  AS skill_name,
	    s.skill_text  AS skill_text
	  FROM `SkillDB` s
	  WHERE LOWER(s.skill_type) = 'event'
	    AND (LOWER(s.element) = 'none' OR LOWER(s.element) = LOWER(#{session}))
	    AND (LOWER(s.skill_job) = 'common' OR LOWER(s.skill_job) = LOWER(#{job}))
	  ORDER BY RAND()
	  LIMIT #{limit}
  </select>

  <!-- 보유 스킬에서 랜덤 3장 (구현체에 따라 JSON_EXTRACT 사용) -->
  <select id="getOwnedSkillsRandom" resultType="com.milite.dto.SkillDto">
	  SELECT
	    s.skill_id    AS skill_ID,
	    s.skill_job   AS skill_Job,
	    s.skill_type  AS skill_Type,
	    s.rarity      AS rarity,
	    s.element     AS element,
	    s.skill_name  AS skill_name,
	    s.skill_text  AS skill_text
	  FROM `PlayerDB` p
	  JOIN JSON_TABLE(p.`Own_Skill`, '$[*]' COLUMNS (skill_id INT PATH '$')) j
	        ON TRUE
	  JOIN `SkillDB` s
	        ON s.skill_id = j.skill_id
	  WHERE p.`Player_ID` = #{playerId}
	    AND LOWER(s.skill_type) = 'event'
	  ORDER BY RAND()
	  LIMIT #{limit}
  </select>

  <!-- ======= Artifact ======= -->
  <select id="pickOneUnusedArtifactEvent" resultType="com.milite.dto.ArtifactEventDto">
    SELECT ae_id, ae_name, ae_session
    FROM artifactevent
    WHERE (LOWER(ae_session)='none' OR LOWER(ae_session)=LOWER(#{session}))
      AND ae_id NOT IN (
        SELECT event_id FROM used_events
        WHERE player_id = #{playerId}
          AND layer = #{layer}
          AND event_type = 'artifact'
      )
    ORDER BY RAND() LIMIT 1
  </select>

  <select id="getArtifactsBySession" resultType="com.milite.dto.ArtifactDto">
  	SELECT
    	a.artifact_id       AS artifact_id,
    	a.artifact_name     AS artifact_name,
	    a.artifact_job      AS artifact_job,
	    a.artifact_session  AS artifact_session,
	    a.artifact_text     AS artifact_text
	  FROM `ArtifactDB` a
	  WHERE (LOWER(a.artifact_session) = 'none' OR LOWER(a.artifact_session) = LOWER(#{session}))
	    AND (LOWER(a.artifact_job) = 'common' OR LOWER(a.artifact_job) = LOWER(#{job}))
	  ORDER BY RAND()
	  LIMIT #{limit}
  </select>

  <!-- ======= Boss ======= -->
  <select id="pickOneUnusedBoss" resultType="com.milite.dto.BossEventDto">
    SELECT be_id, be_name, be_session, MonsterID
    FROM bossevent
    WHERE (LOWER(be_session)='none' OR LOWER(be_session)=LOWER(#{session}))
      AND be_id NOT IN (
        SELECT event_id FROM used_events
        WHERE player_id = #{playerId}
          AND layer = 'GLOBAL'
          AND event_type = 'boss'
      )
    ORDER BY RAND() LIMIT 1
  </select>

  <select id="getBossById" parameterType="int" resultType="com.milite.dto.BossEventDto">
    SELECT be_id, be_name, be_session, MonsterID
    FROM bossevent
    WHERE be_id = #{be_id}
    LIMIT 1
  </select>

  <!-- ======= used_events 공통 ======= -->
  <insert id="markEventUsed">
    INSERT INTO used_events (player_id, layer, event_type, event_id)
    VALUES (#{playerId}, #{layer}, #{type}, #{eventId})
    ON DUPLICATE KEY UPDATE used_at = CURRENT_TIMESTAMP
  </insert>

  <delete id="resetLayerUsed">
    DELETE FROM used_events
    WHERE player_id = #{playerId}
      AND layer = #{layer}
      AND event_type != 'boss'
  </delete>

</mapper>